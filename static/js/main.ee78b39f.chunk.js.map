{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","totalPagePages","Math","ceil","numbersArray","Array","from","length","_","index","className","href","onClick","map","number","App","useState","setPerPage","setCurrentPage","firstItem","lastItem","min","items","start","totalItems","getNumbers","n","id","value","onChange","event","target","htmlFor","pageNumber","newPage","item","ReactDOM","render","document","getElementById"],"mappings":"4KAOaA,EAAwC,SAAC,GAK/C,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAiBC,KAAKC,KAAKN,EAAQC,GACnCM,EACFC,MAAMC,KAAK,CAAEC,OAAQN,IAAkB,SAACO,EAAGC,GAAJ,OAAcA,EAAQ,KAEjE,OACE,qBAAIC,UAAU,aAAd,UACE,oBAAIA,UAAS,oBAA+B,IAAhBX,EAAoB,WAAa,IAA7D,SACE,mBACE,UAAQ,WACRW,UAAU,YACVC,KAAK,QACLC,QAAS,kBAAMZ,GAAc,IAC7B,gBAA+B,IAAhBD,EAAoB,OAAS,QAL9C,oBAUDK,EAAaS,KAAI,SAACC,GAAD,OAChB,oBAAIJ,UAAS,oBAAeX,IAAgBe,EAAS,SAAW,IAAhE,SACE,mBACE,UAAQ,WACRJ,UAAU,YACVC,KAAI,WAAMG,GACVF,QAAS,kBAAMZ,EAAac,EAASf,IAJvC,SAMGe,KAPsEA,MAW7E,oBAAIJ,UAAS,oBAAeX,IAAgBE,EAAiB,WAAa,IAA1E,SACE,mBACE,UAAQ,WACRS,UAAU,YACVC,KAAK,QACLC,QAAS,kBAAMZ,EAAa,IAC5B,gBAAeD,IAAgBE,EAAiB,OAAS,QAL3D,wBCvCKc,EAAgB,WAC3B,IACA,EAA8BC,mBAAS,GAAvC,mBAAOlB,EAAP,KAAgBmB,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAOjB,EAAP,KAAoBmB,EAApB,KACMjB,EAAiBC,KAAKC,KAHd,GAG2BL,GAkBnCqB,EAAYrB,GAAWC,EAAc,GAAK,EAC1CqB,EAAWlB,KAAKmB,IAAIvB,EAAUC,EAtBtB,IAqCRuB,EAba,WACjB,IAAMC,EAAQJ,EAERK,EADMJ,EACaG,EAAQ,EAOjC,OALmBlB,MAAMC,KACvB,CAAEC,OAAQiB,IACV,SAAChB,EAAGC,GAAJ,OAAcc,EAAQd,KAMZgB,GACXZ,KAAI,SAACa,GAAD,qBAAuBA,MAE9B,OACE,sBAAKhB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWX,EADX,mBACiCoB,EADjC,cACgDC,EADhD,eA5CU,GA4CV,OAIA,sBAAKV,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRiB,GAAG,kBACHjB,UAAU,eACVkB,MAAO9B,EACP+B,SAjDY,SAACC,GACrBb,EAAU,OAACa,QAAD,IAACA,OAAD,EAACA,EAAOC,OAAOH,OACzBV,EAAe,IA0CT,UAOE,wBAAQU,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOI,QAAQ,kBAAkBtB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEb,MAtEQ,GAuERC,QAASA,EACTC,YAAaA,EACbC,aA9DoB,SAACiC,GACzB,GAAmB,IAAfA,EAAkB,CACpB,IAAMC,EAAUnC,EAAckC,EAE1BC,GAAW,GAAKA,GAAWjC,GAC7BiB,EAAegB,OA2DjB,6BACGZ,EAAMT,KAAI,SAACsB,GAAD,OACT,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YC/ElCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.ee78b39f.chunk.js","sourcesContent":["interface PaginationProps {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (event: number) => void;\n}\n\nexport const Pagination: React.FC<PaginationProps> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const totalPagePages = Math.ceil(total / perPage);\n  const numbersArray\n    = Array.from({ length: totalPagePages }, (_, index) => index + 1);\n\n  return (\n    <ul className=\"pagination\">\n      <li className={`page-item ${currentPage === 1 ? 'disabled' : ''}`}>\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          onClick={() => onPageChange(-1)}\n          aria-disabled={currentPage === 1 ? 'true' : 'false'}\n        >\n          «\n        </a>\n      </li>\n      {numbersArray.map((number: number) => (\n        <li className={`page-item ${currentPage === number ? 'active' : ''}`} key={number}>\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${number}`}\n            onClick={() => onPageChange(number - currentPage)}\n          >\n            {number}\n          </a>\n        </li>\n      ))}\n      <li className={`page-item ${currentPage === totalPagePages ? 'disabled' : ''}`}>\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          onClick={() => onPageChange(1)}\n          aria-disabled={currentPage === totalPagePages ? 'true' : 'false'}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\n\nexport const App: React.FC = () => {\n  const total = 42;\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n  const totalPagePages = Math.ceil(total / perPage);\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const handlePerPage = (event: any) => {\n    setPerPage(event?.target.value);\n    setCurrentPage(1);\n  };\n\n  const handleCurrentPage = (pageNumber: number) => {\n    if (pageNumber !== 0) {\n      const newPage = currentPage + pageNumber;\n\n      if (newPage >= 1 && newPage <= totalPagePages) {\n        setCurrentPage(newPage);\n      }\n    }\n  };\n\n  const firstItem = perPage * (currentPage - 1) + 1;\n  const lastItem = Math.min(perPage * currentPage, total);\n\n  const getNumbers = (): number[] => {\n    const start = firstItem;\n    const end = lastItem;\n    const totalItems = end - start + 1;\n\n    const newNumbers = Array.from(\n      { length: totalItems },\n      (_, index) => start + index,\n    );\n\n    return newNumbers;\n  };\n\n  const items = getNumbers()\n    .map((n: number) => `Item ${n}`);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstItem} - ${lastItem} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={handlePerPage}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={total}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={handleCurrentPage}\n      />\n      <ul>\n        {items.map((item: string) => (\n          <li data-cy=\"item\" key={item}>{item}</li>\n        ))}\n      </ul>\n\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}